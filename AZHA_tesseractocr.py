# -*- coding: utf-8 -*-
"""My_TesseractOCR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/135VkW7Kz5TsP43gUydrtqgj6AAEDCEV8
"""
import pytesseract
import cv2 #openCV
import numpy as np
import math

pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'

#1. grayscale
filepath = r'result\055_result.jpg'
img = cv2.imread(filepath)
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) #컬러 체계 변경

#blur
img_blurred = cv2.GaussianBlur(gray, ksize=(5,5), sigmaX=0)

#threshhold
threshold1 = 100
threshold2 = 300
canny = cv2.Canny(img_blurred, threshold1, threshold2)

kernel = np.ones((5,5))
imgDial = cv2.dilate(canny, kernel, iterations=2) #dilation 적용
imgThreshold = cv2.erode(imgDial, kernel, iterations=1) #erosion 적용

#1. contour 찾기
imgContours = img.copy()
cnts = cv2.findContours(imgThreshold, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
cnts = cnts[0] if len(cnts) == 2 else cnts[1]

#2. 최대 면적을 가지는 contour 찾기
maxArea = 0
maxContour = 0
for cnt in cnts:
    approx = cv2.contourArea(cnt)
    if maxArea < approx:
      maxArea = approx
      maxContour = cnt
cv2.drawContours(imgContours, maxContour, -1, (0,255,0), 10)

#순서 맞추기
rect = cv2.minAreaRect(maxContour)
box = cv2.boxPoints(rect)   # 4개의 꼭짓점 좌표
box = np.int0(box)          # 정수로 변환
box = np.where(box < 0, 0, box)
temp = box.tolist()
src = []
temp.sort(key=lambda x:x[0])
if temp[0][1] < temp[1][1]:
  src.append(temp[0])
  src.append(temp[1])
else:
  src.append(temp[1])
  src.append(temp[0])

if temp[2][1] > temp[3][1]:
  src.append(temp[2])
  src.append(temp[3])
else:
  src.append(temp[3])
  src.append(temp[2])

src = np.array(src, dtype=np.float32)

cv2.drawContours(imgContours, [box], -1, (255,0,0), 3)

#5. perspective transform
width = max(np.linalg.norm(src[0] - src[3]), np.linalg.norm(src[1] - src[2]))
height = max(np.linalg.norm(src[0] - src[1]), np.linalg.norm(src[2] - src[3]))

dst_np = np.array([
    [0, 0],
    [0, height],
    [width, height],
    [width, 0]
    ], dtype=np.float32)
M = cv2.getPerspectiveTransform(src=src, dst=dst_np)
result = cv2.warpPerspective(img, M=M, dsize=(math.floor(width), math.floor(height)))

#cv2.imwrite(f'/content/{file_name}_result.jpg',result)

gray2 = cv2.cvtColor(result, cv2.COLOR_RGB2GRAY)
blur = cv2.GaussianBlur(gray2,(1,1),0)
light = blur+20

text = pytesseract.image_to_string(light, lang="kor")

print(text.replace(" ", ""))

with open(f"{filepath}.txt", "w", encoding="utf8") as f: #출력
    f.write(text)
    f.write("\n\n\n")
    f.write(text.replace(" ", ""))

